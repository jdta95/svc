// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// new_svclm_theta
Rcpp::List new_svclm_theta(const arma::vec& Y, const arma::mat& X, const arma::mat& coords, const arma::mat& beta_start, double tausq_start, const arma::vec& sigmasq_start, const arma::vec& phi_start, double tausq_proposal_sd, const arma::vec& sigmasq_proposal_sd, const arma::vec& phi_proposal_sd, const arma::vec& phi_lower, const arma::vec& phi_upper, double a_tausq, double b_tausq, const arma::vec& a_sigmasq, const arma::vec& b_sigmasq, unsigned int mcmc);
RcppExport SEXP _svc_new_svclm_theta(SEXP YSEXP, SEXP XSEXP, SEXP coordsSEXP, SEXP beta_startSEXP, SEXP tausq_startSEXP, SEXP sigmasq_startSEXP, SEXP phi_startSEXP, SEXP tausq_proposal_sdSEXP, SEXP sigmasq_proposal_sdSEXP, SEXP phi_proposal_sdSEXP, SEXP phi_lowerSEXP, SEXP phi_upperSEXP, SEXP a_tausqSEXP, SEXP b_tausqSEXP, SEXP a_sigmasqSEXP, SEXP b_sigmasqSEXP, SEXP mcmcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type coords(coordsSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type beta_start(beta_startSEXP);
    Rcpp::traits::input_parameter< double >::type tausq_start(tausq_startSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type sigmasq_start(sigmasq_startSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type phi_start(phi_startSEXP);
    Rcpp::traits::input_parameter< double >::type tausq_proposal_sd(tausq_proposal_sdSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type sigmasq_proposal_sd(sigmasq_proposal_sdSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type phi_proposal_sd(phi_proposal_sdSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type phi_lower(phi_lowerSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type phi_upper(phi_upperSEXP);
    Rcpp::traits::input_parameter< double >::type a_tausq(a_tausqSEXP);
    Rcpp::traits::input_parameter< double >::type b_tausq(b_tausqSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type a_sigmasq(a_sigmasqSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type b_sigmasq(b_sigmasqSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type mcmc(mcmcSEXP);
    rcpp_result_gen = Rcpp::wrap(new_svclm_theta(Y, X, coords, beta_start, tausq_start, sigmasq_start, phi_start, tausq_proposal_sd, sigmasq_proposal_sd, phi_proposal_sd, phi_lower, phi_upper, a_tausq, b_tausq, a_sigmasq, b_sigmasq, mcmc));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_svc_new_svclm_theta", (DL_FUNC) &_svc_new_svclm_theta, 17},
    {NULL, NULL, 0}
};

RcppExport void R_init_svc(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
